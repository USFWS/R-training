chipps_data_agg_base$TowNumber,
chipps_data_agg_base$OrganismCode)
chipps_data_agg_base <- chipps_data_agg_base[index_sorted, ]
trawl_data <- readr::read_csv(trawl_file, show_col_types=FALSE)
station_data <- readr::read_csv(station_file, show_col_types=FALSE)
chipps_data_agg_tidy <- trawl_data %>%
# Reformat and add new fields:
dplyr::mutate(SampleDate=as.Date(SampleDate),
Year=lubridate::year(SampleDate),
Month=lubridate::month(SampleDate)) %>%
# Subset/filter:
dplyr::filter(Year == 2017 & Month == 5 & Location == "Chipps Island") %>%
# Select fields:
dplyr::select(Location, StationCode, SampleDate, SampleTime, MethodCode,
GearConditionCode, TowNumber, Volume, WaterTemp, OrganismCode,
ForkLength, Count) %>%
# Group and summarize/aggregate:
dplyr::group_by(Location, StationCode, SampleDate, SampleTime, MethodCode,
GearConditionCode, TowNumber, Volume, WaterTemp, OrganismCode) %>%
dplyr::summarize(Count=sum(Count), .groups="drop") %>%
# Handle missing values:
dplyr::mutate(WaterTemp=tidyr::replace_na(WaterTemp, mean(WaterTemp, na.rm=TRUE))) %>%
# Join:
dplyr::left_join(station_data, by=c("MethodCode","Location","StationCode")) %>%
# Sort:
dplyr::arrange(SampleDate, TowNumber, OrganismCode) %>%
# Save data:
readr::write_csv(file=file.path(root,"data","chipps_data_tidy.csv"))
chipps_base <- read.csv(file.path(root,"data","chipps_data_base.csv"))
chipps_tidy <- read.csv(file.path(root,"data","chipps_data_tidy.csv"))
identical(chipps_base, chipps_tidy)
dim(chipps_base)
dim(chipps_tidy)
identical(names(chipps_base), names(chipps_tidy))
names(chipps_base)
names(chipps_tidy)
identical(sort(names(chipps_base)), sort(names(chipps_tidy)))
for(col_name in names(chipps_base)) {
if(!identical(chipps_base[ ,col_name], chipps_tidy[ ,col_name])) {
print(col_name)
}
}
?merge
# Calculate total counts:
chipps_data_list <- lapply(chipps_data_split, function(x) {
# These checks aren't strictly necessary, but it can be
# worthwhile to check that the data are as expected:
stopifnot(length(unique(x$Location)) == 1)
stopifnot(length(unique(x$SampleTime)) == 1)
stopifnot(length(unique(x$MethodCode)) == 1)
stopifnot(length(unique(x$GearConditionCode)) == 1)
stopifnot(length(unique(x$Volume)) == 1)
stopifnot(length(unique(x$WaterTemp)) == 1)
# Keep one row per tow:
ret <- x[1, ]
# Remove the ForkLength field:
ret$ForkLength <- NULL
# Sum over the counts-by-length:
ret$Count <- sum(x$Count)
return(ret)
})
chipps_data_list[1:3]
# Recombine:
chipps_data_agg_base <- unsplit(value=chipps_data_list, f=names(chipps_data_list))
# Example of how you might want to handle missing values:
ind_missing <- is.na(chipps_data_agg_base$WaterTemp)
chipps_data_agg_base$WaterTemp[ind_missing] <- mean(chipps_data_agg_base$WaterTemp,
na.rm=TRUE)
chipps_data_agg_base <- merge(x=chipps_data_agg_base,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE,
sort=FALSE)
head(chipps_data_agg_base)
# Recombine:
chipps_data_agg_base <- unsplit(value=chipps_data_list, f=names(chipps_data_list))
head(chipps_data_agg_base)
# Example of how you might want to handle missing values:
ind_missing <- is.na(chipps_data_agg_base$WaterTemp)
chipps_data_agg_base$WaterTemp[ind_missing] <- mean(chipps_data_agg_base$WaterTemp,
na.rm=TRUE)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Month <- as.numeric(format(trawl_data$SampleDate, "%m"))
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","SampleDate","SampleTime",
"MethodCode","GearConditionCode","TowNumber","Volume",
"WaterTemp","OrganismCode","ForkLength","Count")]
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude","
SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
names(chipps_data)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude",
"SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
row.names(chipps_data) <- NULL
# Split:
chipps_data_split <- split(x=chipps_data,
f= ~ StationCode + SampleDate + TowNumber + OrganismCode,
drop=TRUE)
# Calculate total counts:
chipps_data_list <- lapply(chipps_data_split, function(x) {
# These checks aren't strictly necessary, but it can be
# worthwhile to check that the data are as expected:
stopifnot(length(unique(x$Location)) == 1)
stopifnot(length(unique(x$SampleTime)) == 1)
stopifnot(length(unique(x$MethodCode)) == 1)
stopifnot(length(unique(x$GearConditionCode)) == 1)
stopifnot(length(unique(x$Volume)) == 1)
stopifnot(length(unique(x$WaterTemp)) == 1)
# Keep one row per tow:
ret <- x[1, ]
# Remove the ForkLength field:
ret$ForkLength <- NULL
# Sum over the counts-by-length:
ret$Count <- sum(x$Count)
return(ret)
})
# Recombine:
chipps_data_agg_base <- unsplit(value=chipps_data_list, f=names(chipps_data_list))
# Example of how you might want to handle missing values:
ind_missing <- is.na(chipps_data_agg_base$WaterTemp)
chipps_data_agg_base$WaterTemp[ind_missing] <- mean(chipps_data_agg_base$WaterTemp,
na.rm=TRUE)
index_sorted <- order(chipps_data_agg_base$SampleDate,
chipps_data_agg_base$TowNumber,
chipps_data_agg_base$OrganismCode)
chipps_data_agg_base <- chipps_data_agg_base[index_sorted, ]
identical(names(chipps_base), names(chipps_tidy))
names(chipps_base)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
names(chipps_data)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("Location","MethodCode","StationCode"),
all.x=TRUE)
names(chipps_data)
View(trawl_data)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude",
"SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
names(chipps_data)
# Split:
chipps_data_split <- split(x=chipps_data,
f= ~ StationCode + SampleDate + TowNumber + OrganismCode,
drop=TRUE)
# Calculate total counts:
chipps_data_list <- lapply(chipps_data_split, function(x) {
# These checks aren't strictly necessary, but it can be
# worthwhile to check that the data are as expected:
stopifnot(length(unique(x$Location)) == 1)
stopifnot(length(unique(x$SampleTime)) == 1)
stopifnot(length(unique(x$MethodCode)) == 1)
stopifnot(length(unique(x$GearConditionCode)) == 1)
stopifnot(length(unique(x$Volume)) == 1)
stopifnot(length(unique(x$WaterTemp)) == 1)
# Keep one row per tow:
ret <- x[1, ]
# Remove the ForkLength field:
ret$ForkLength <- NULL
# Sum over the counts-by-length:
ret$Count <- sum(x$Count)
return(ret)
})
# Recombine:
chipps_data_agg_base <- unsplit(value=chipps_data_list, f=names(chipps_data_list))
names(chipps_data_agg_base)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude",
"SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
names(chipps_data)
# Split:
chipps_data_split <- split(x=chipps_data,
f= ~ StationCode + SampleDate + TowNumber + OrganismCode,
drop=TRUE)
# Calculate total counts:
chipps_data_list <- lapply(chipps_data_split, function(x) {
# These checks aren't strictly necessary, but it can be
# worthwhile to check that the data are as expected:
stopifnot(length(unique(x$Location)) == 1)
stopifnot(length(unique(x$SampleTime)) == 1)
stopifnot(length(unique(x$MethodCode)) == 1)
stopifnot(length(unique(x$GearConditionCode)) == 1)
stopifnot(length(unique(x$Volume)) == 1)
stopifnot(length(unique(x$WaterTemp)) == 1)
# Keep one row per tow:
ret <- x[1, ]
# Remove the ForkLength field:
ret$ForkLength <- NULL
# Sum over the counts-by-length:
ret$Count <- sum(x$Count)
return(ret)
})
# Recombine:
chipps_data_agg_base <- unsplit(value=chipps_data_list, f=names(chipps_data_list))
names(chipps_data_agg_base)
# Example of how you might want to handle missing values:
ind_missing <- is.na(chipps_data_agg_base$WaterTemp)
chipps_data_agg_base$WaterTemp[ind_missing] <- mean(chipps_data_agg_base$WaterTemp,
na.rm=TRUE)
index_sorted <- order(chipps_data_agg_base$SampleDate,
chipps_data_agg_base$TowNumber,
chipps_data_agg_base$OrganismCode)
chipps_data_agg_base <- chipps_data_agg_base[index_sorted, ]
names(chipps_data_agg_base)
trawl_data <- readr::read_csv(trawl_file, show_col_types=FALSE)
trawl_data <- readr::read_csv(trawl_file, show_col_types=FALSE)
station_data <- readr::read_csv(station_file, show_col_types=FALSE)
chipps_data_agg_tidy <- trawl_data %>%
# Reformat and add new fields:
dplyr::mutate(SampleDate=as.Date(SampleDate),
Year=lubridate::year(SampleDate),
Month=lubridate::month(SampleDate)) %>%
# Subset/filter:
dplyr::filter(Year == 2017 & Month == 5 & Location == "Chipps Island") %>%
# Join:
dplyr::left_join(station_data, by=c("MethodCode","Location","StationCode")) %>%
# Select fields:
dplyr::select(Location, StationCode, Longitude, Latitude, SampleDate, SampleTime,
MethodCode, GearConditionCode, TowNumber, Volume, WaterTemp,
OrganismCode, ForkLength, Count) %>%
# Group and summarize/aggregate:
dplyr::group_by(Location, StationCode, SampleDate, SampleTime, MethodCode,
GearConditionCode, TowNumber, Volume, WaterTemp, OrganismCode) %>%
dplyr::summarize(Count=sum(Count), .groups="drop") %>%
# Handle missing values:
dplyr::mutate(WaterTemp=tidyr::replace_na(WaterTemp, mean(WaterTemp, na.rm=TRUE))) %>%
# Sort:
dplyr::arrange(SampleDate, TowNumber, OrganismCode) %>%
# Save data:
readr::write_csv(file=file.path(root,"data","chipps_data_tidy.csv"))
chipps_base <- read.csv(file.path(root,"data","chipps_data_base.csv"))
write.csv(chipps_data_agg_base, file.path(root,"data","chipps_data_base.csv"),
row.names=FALSE)
chipps_base <- read.csv(file.path(root,"data","chipps_data_base.csv"))
chipps_tidy <- read.csv(file.path(root,"data","chipps_data_tidy.csv"))
identical(chipps_base, chipps_tidy)
dim(chipps_base)
dim(chipps_tidy)
identical(names(chipps_base), names(chipps_tidy))
names(chipps_base)
names(chipps_tidy)
chipps_data_agg_tidy <- trawl_data %>%
# Reformat and add new fields:
dplyr::mutate(SampleDate=as.Date(SampleDate),
Year=lubridate::year(SampleDate),
Month=lubridate::month(SampleDate)) %>%
# Subset/filter:
dplyr::filter(Year == 2017 & Month == 5 & Location == "Chipps Island") %>%
# Join:
dplyr::left_join(station_data, by=c("MethodCode","Location","StationCode")) %>%
# Select fields:
dplyr::select(Location, StationCode, Longitude, Latitude, SampleDate, SampleTime,
MethodCode, GearConditionCode, TowNumber, Volume, WaterTemp,
OrganismCode, ForkLength, Count) %>%
# Group and summarize/aggregate:
dplyr::group_by(Location, StationCode, Longitude, Latitude, SampleDate, SampleTime,
MethodCode, GearConditionCode, TowNumber, Volume, WaterTemp,
OrganismCode) %>%
dplyr::summarize(Count=sum(Count), .groups="drop") %>%
# Handle missing values:
dplyr::mutate(WaterTemp=tidyr::replace_na(WaterTemp, mean(WaterTemp, na.rm=TRUE))) %>%
# Sort:
dplyr::arrange(SampleDate, TowNumber, OrganismCode) %>%
# Save data:
readr::write_csv(file=file.path(root,"data","chipps_data_tidy.csv"))
chipps_base <- read.csv(file.path(root,"data","chipps_data_base.csv"))
chipps_tidy <- read.csv(file.path(root,"data","chipps_data_tidy.csv"))
identical(names(chipps_base), names(chipps_tidy))
for(col_name in names(chipps_base)) {
if(!identical(chipps_base[ ,col_name], chipps_tidy[ ,col_name])) {
print(col_name)
}
}
# WaterTemp's are the same up to some machine level precision:
unique(chipps_base$WaterTemp - chipps_tidy$WaterTemp)
# Round WaterTemp's to one decimal place for comparison purposes:
chipps_base$WaterTemp <- round(chipps_base$WaterTemp, 1)
chipps_tidy$WaterTemp <- round(chipps_tidy$WaterTemp, 1)
identical(chipps_base, chipps_tidy)
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
?aggregate
library(bookdown)
root <- getwd()
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
knitr::opts_chunk$set(echo=TRUE)
trawl_file <- file.path(root,"data","edi.244.8",
"2002-2021_DJFMP_trawl_fish_and_water_quality_data.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
station_data <- read.csv(station_file, stringsAsFactors=FALSE)
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Month <- as.numeric(format(trawl_data$SampleDate, "%m"))
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude",
"SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
# Split and aggregate:
chipps_data_agg_base <- aggregate(Count ~ Location + StationCode + Longitude + Latitude +
SampleDate + SampleTime + MethodCode +
GearConditionCode + TowNumber + Volume +
WaterTemp + OrganismCode,
data=chipps_data, FUN=sum)
View(chipps_data_agg_base)
any(is.na(chipps_data_agg_base$WaterTemp))
# Split and aggregate:
chipps_data_agg_base <- aggregate(Count ~ Location + StationCode + Longitude + Latitude +
SampleDate + SampleTime + MethodCode +
GearConditionCode + TowNumber + Volume +
WaterTemp + OrganismCode,
data=chipps_data, FUN=sum, na.action=na.pass)
any(is.na(chipps_data_agg_base$WaterTemp))
any(is.na(chipps_data$WaterTemp))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
root <- getwd()
library(knitr)
library(kableExtra)
library(tidyr)
library(readr)
library(lubridate)
trawl_file <- file.path(root,"data","edi.244.8",
"2002-2021_DJFMP_trawl_fish_and_water_quality_data.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
station_data <- read.csv(station_file, stringsAsFactors=FALSE)
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Month <- as.numeric(format(trawl_data$SampleDate, "%m"))
chipps_data <- subset(trawl_data, Year == 2017 & Month == 5 & Location == "Chipps Island")
chipps_data <- merge(x=chipps_data,
y=station_data,
by=c("MethodCode","Location","StationCode"),
all.x=TRUE)
chipps_data <- chipps_data[ ,c("Location","StationCode","Longitude","Latitude",
"SampleDate","SampleTime","MethodCode","GearConditionCode",
"TowNumber","Volume","WaterTemp","OrganismCode",
"ForkLength","Count")]
# Do a little bit of checking:
unique(chipps_data$Location)
unique(chipps_data$StationCode)
unique(chipps_data$MethodCode)
unique(chipps_data$GearConditionCode)
# Split:
chipps_data_split <- split(x=chipps_data,
f= ~ StationCode + SampleDate + TowNumber + OrganismCode,
drop=TRUE)
names(chipps_data_split)
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
root <- getwd()
trawl_file <- file.path(root,"data","edi.244.8_abridged",
"2002-2021_DJFMP_trawl_fish_and_water_quality_data_ABRIDGED.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
trawl_data$SampleDate <- as.Date(trawl_data$SampleDate)
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Year <- as.numeric(format(trawl_data$SampleDate, "%Y"))
trawl_data$Month <- as.numeric(format(trawl_data$SampleDate, "%m"))
a <- subset(trawl_data, Year >= 2010)
write(file.path(root,"a.csv"), row.names=FALSE)
write.csv(file.path(root,"a.csv"), row.names=FALSE)
write.csv(a,
file.path(root,"a.csv"), row.names=FALSE)
a <- subset(trawl_data, Year >= 2015)
write.csv(a,
file.path(root,"a.csv"), row.names=FALSE)
a <- subset(trawl_data, Year >= 2017)
write.csv(a,
file.path(root,"a.csv"), row.names=FALSE)
a <- subset(trawl_data, Year >= 2017 & Location == "Chipps Island")
write.csv(a,
file.path(root,"a.csv"), row.names=FALSE)
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
trawl_file <- file.path(root,"data","edi.244.8_abridged",
"2007-2021_DJFMP_chipps_trawl_fish_and_water_quality_data.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
station_data <- read.csv(station_file, stringsAsFactors=FALSE)
trawl_file <- file.path(root,"data","edi.244.8_abridged",
"2017-2021_DJFMP_chipps_trawl_fish_and_water_quality_dataa.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
trawl_file <- file.path(root,"data","edi.244.8_abridged",
"2017-2021_DJFMP_chipps_trawl_fish_and_water_quality_data.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
trawl_file <- file.path(root,"data","edi.244.8_abridged",
"2017-2021_DJFMP_chipps_trawl_fish_and_water_quality_data.csv")
station_file <- file.path(root,"data","edi.244.8","DJFMP_Site_Locations.csv")
trawl_data <- read.csv(trawl_file, stringsAsFactors=FALSE)
station_data <- read.csv(station_file, stringsAsFactors=FALSE)
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
library(bookdown)
root <- getwd()
bookdown::render_book(input=file.path(root,"lessons","source"),
output_dir=file.path(root,"lessons","output"))
